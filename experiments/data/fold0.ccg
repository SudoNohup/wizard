assign x with y
(assign:<e,<e,e>> x:id y:id)

x equals to 1
(equalcmp:<e,<e,e>> x:id 1:i)

if x equals to 1 assign x with y
(if:<expr,<block,e>> (equalcmp:<e,<e,e>> x:id 1:i)  (assign:<e,<e,e>> x:id y:id) )

assign x with y if x equals to 1 
(if:<expr,<block,e>> (equalcmp:<e,<e,e>> x:id 1:i)  (assign:<e,<e,e>> x:id y:id) )

return z as the result
(ret:<e,jmpStmt> z:id)

x times 2
(times:<e,<e,expr>> x:id 2:i)

//let r be the remainder of m divide n
//(assign:<e,<e,e>> r:id (mod:<e,<e,expr>> m:id n:id))

x times by 2
(times:<e,<e,expr>> x:id 2:i)

x plus 2
(times:<e,<e,expr>> x:id 2:i)
